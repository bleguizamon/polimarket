package co.edu.poligran.polimarket.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VendedorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendedorAllPropertiesEquals(Vendedor expected, Vendedor actual) {
        assertVendedorAutoGeneratedPropertiesEquals(expected, actual);
        assertVendedorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendedorAllUpdatablePropertiesEquals(Vendedor expected, Vendedor actual) {
        assertVendedorUpdatableFieldsEquals(expected, actual);
        assertVendedorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendedorAutoGeneratedPropertiesEquals(Vendedor expected, Vendedor actual) {
        assertThat(actual)
            .as("Verify Vendedor auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendedorUpdatableFieldsEquals(Vendedor expected, Vendedor actual) {
        assertThat(actual)
            .as("Verify Vendedor relevant properties")
            .satisfies(a -> assertThat(a.getNombre()).as("check nombre").isEqualTo(expected.getNombre()))
            .satisfies(a -> assertThat(a.getAutorizado()).as("check autorizado").isEqualTo(expected.getAutorizado()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendedorUpdatableRelationshipsEquals(Vendedor expected, Vendedor actual) {
        assertThat(actual)
            .as("Verify Vendedor relationships")
            .satisfies(a -> assertThat(a.getAreaDeNegocio()).as("check areaDeNegocio").isEqualTo(expected.getAreaDeNegocio()));
    }
}
