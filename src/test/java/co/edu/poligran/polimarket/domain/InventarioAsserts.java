package co.edu.poligran.polimarket.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InventarioAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventarioAllPropertiesEquals(Inventario expected, Inventario actual) {
        assertInventarioAutoGeneratedPropertiesEquals(expected, actual);
        assertInventarioAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventarioAllUpdatablePropertiesEquals(Inventario expected, Inventario actual) {
        assertInventarioUpdatableFieldsEquals(expected, actual);
        assertInventarioUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventarioAutoGeneratedPropertiesEquals(Inventario expected, Inventario actual) {
        assertThat(actual)
            .as("Verify Inventario auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventarioUpdatableFieldsEquals(Inventario expected, Inventario actual) {
        assertThat(actual)
            .as("Verify Inventario relevant properties")
            .satisfies(a -> assertThat(a.getCantidad()).as("check cantidad").isEqualTo(expected.getCantidad()))
            .satisfies(a -> assertThat(a.getUbicacion()).as("check ubicacion").isEqualTo(expected.getUbicacion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventarioUpdatableRelationshipsEquals(Inventario expected, Inventario actual) {
        assertThat(actual)
            .as("Verify Inventario relationships")
            .satisfies(a -> assertThat(a.getProducto()).as("check producto").isEqualTo(expected.getProducto()));
    }
}
