package co.edu.poligran.polimarket.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClienteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClienteAllPropertiesEquals(Cliente expected, Cliente actual) {
        assertClienteAutoGeneratedPropertiesEquals(expected, actual);
        assertClienteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClienteAllUpdatablePropertiesEquals(Cliente expected, Cliente actual) {
        assertClienteUpdatableFieldsEquals(expected, actual);
        assertClienteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClienteAutoGeneratedPropertiesEquals(Cliente expected, Cliente actual) {
        assertThat(actual)
            .as("Verify Cliente auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClienteUpdatableFieldsEquals(Cliente expected, Cliente actual) {
        assertThat(actual)
            .as("Verify Cliente relevant properties")
            .satisfies(a -> assertThat(a.getNombre()).as("check nombre").isEqualTo(expected.getNombre()))
            .satisfies(a -> assertThat(a.getContacto()).as("check contacto").isEqualTo(expected.getContacto()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClienteUpdatableRelationshipsEquals(Cliente expected, Cliente actual) {
        assertThat(actual)
            .as("Verify Cliente relationships")
            .satisfies(a -> assertThat(a.getVendedor()).as("check vendedor").isEqualTo(expected.getVendedor()));
    }
}
